"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[4242],{3905:(e,n,r)=>{r.d(n,{Zo:()=>c,kt:()=>h});var t=r(7294);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function i(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function l(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?i(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function s(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var o=t.createContext({}),u=function(e){var n=t.useContext(o),r=n;return e&&(r="function"==typeof e?e(n):l(l({},n),e)),r},c=function(e){var n=u(e.components);return t.createElement(o.Provider,{value:n},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},p=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=u(r),p=a,h=d["".concat(o,".").concat(p)]||d[p]||m[p]||i;return r?t.createElement(h,l(l({ref:n},c),{},{components:r})):t.createElement(h,l({ref:n},c))}));function h(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=r.length,l=new Array(i);l[0]=p;var s={};for(var o in n)hasOwnProperty.call(n,o)&&(s[o]=n[o]);s.originalType=e,s[d]="string"==typeof e?e:a,l[1]=s;for(var u=2;u<i;u++)l[u]=r[u];return t.createElement.apply(null,l)}return t.createElement.apply(null,r)}p.displayName="MDXCreateElement"},5162:(e,n,r)=>{r.d(n,{Z:()=>l});var t=r(7294),a=r(6010);const i={tabItem:"tabItem_Ymn6"};function l(e){let{children:n,hidden:r,className:l}=e;return t.createElement("div",{role:"tabpanel",className:(0,a.Z)(i.tabItem,l),hidden:r},n)}},4866:(e,n,r)=>{r.d(n,{Z:()=>w});var t=r(7462),a=r(7294),i=r(6010),l=r(2466),s=r(6550),o=r(1980),u=r(7392),c=r(12);function d(e){return function(e){return a.Children.map(e,(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:n,label:r,attributes:t,default:a}}=e;return{value:n,label:r,attributes:t,default:a}}))}function m(e){const{values:n,children:r}=e;return(0,a.useMemo)((()=>{const e=n??d(r);return function(e){const n=(0,u.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,r])}function p(e){let{value:n,tabValues:r}=e;return r.some((e=>e.value===n))}function h(e){let{queryString:n=!1,groupId:r}=e;const t=(0,s.k6)(),i=function(e){let{queryString:n=!1,groupId:r}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:n,groupId:r});return[(0,o._X)(i),(0,a.useCallback)((e=>{if(!i)return;const n=new URLSearchParams(t.location.search);n.set(i,e),t.replace({...t.location,search:n.toString()})}),[i,t])]}function k(e){const{defaultValue:n,queryString:r=!1,groupId:t}=e,i=m(e),[l,s]=(0,a.useState)((()=>function(e){let{defaultValue:n,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const t=r.find((e=>e.default))??r[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:i}))),[o,u]=h({queryString:r,groupId:t}),[d,k]=function(e){let{groupId:n}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(n),[t,i]=(0,c.Nk)(r);return[t,(0,a.useCallback)((e=>{r&&i.set(e)}),[r,i])]}({groupId:t}),f=(()=>{const e=o??d;return p({value:e,tabValues:i})?e:null})();(0,a.useLayoutEffect)((()=>{f&&s(f)}),[f]);return{selectedValue:l,selectValue:(0,a.useCallback)((e=>{if(!p({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);s(e),u(e),k(e)}),[u,k,i]),tabValues:i}}var f=r(2389);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function g(e){let{className:n,block:r,selectedValue:s,selectValue:o,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:d}=(0,l.o5)(),m=e=>{const n=e.currentTarget,r=c.indexOf(n),t=u[r].value;t!==s&&(d(n),o(t))},p=e=>{let n=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const r=c.indexOf(e.currentTarget)+1;n=c[r]??c[0];break}case"ArrowLeft":{const r=c.indexOf(e.currentTarget)-1;n=c[r]??c[c.length-1];break}}n?.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":r},n)},u.map((e=>{let{value:n,label:r,attributes:l}=e;return a.createElement("li",(0,t.Z)({role:"tab",tabIndex:s===n?0:-1,"aria-selected":s===n,key:n,ref:e=>c.push(e),onKeyDown:p,onClick:m},l,{className:(0,i.Z)("tabs__item",b.tabItem,l?.className,{"tabs__item--active":s===n})}),r??n)})))}function v(e){let{lazy:n,children:r,selectedValue:t}=e;const i=(Array.isArray(r)?r:[r]).filter(Boolean);if(n){const e=i.find((e=>e.props.value===t));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},i.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==t}))))}function y(e){const n=k(e);return a.createElement("div",{className:(0,i.Z)("tabs-container",b.tabList)},a.createElement(g,(0,t.Z)({},e,n)),a.createElement(v,(0,t.Z)({},e,n)))}function w(e){const n=(0,f.Z)();return a.createElement(y,(0,t.Z)({key:String(n)},e))}},8520:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>u,toc:()=>d});var t=r(7462),a=(r(7294),r(3905)),i=r(4866),l=r(5162);const s={id:"vserver_linux_rsync",title:"Backups von Linux Server mit Rsync anfertigen",description:"Informationen, wie du mit Rsync Backups von deinem Linux vServer von ZAP-Hosting anfertigen kannst - ZAP-Hosting.com Dokumentationen",sidebar_label:"Rsync Linux"},o=void 0,u={unversionedId:"vserver_linux_rsync",id:"vserver_linux_rsync",title:"Backups von Linux Server mit Rsync anfertigen",description:"Informationen, wie du mit Rsync Backups von deinem Linux vServer von ZAP-Hosting anfertigen kannst - ZAP-Hosting.com Dokumentationen",source:"@site/i18n/de/docusaurus-plugin-content-docs/current/vserver_linux_rsync.md",sourceDirName:".",slug:"/vserver_linux_rsync",permalink:"/guides/de/docs/vserver_linux_rsync",draft:!1,editUrl:"https://github.com/zaphosting/docs/tree/master/docs/vserver_linux_rsync.md",tags:[],version:"current",frontMatter:{id:"vserver_linux_rsync",title:"Backups von Linux Server mit Rsync anfertigen",description:"Informationen, wie du mit Rsync Backups von deinem Linux vServer von ZAP-Hosting anfertigen kannst - ZAP-Hosting.com Dokumentationen",sidebar_label:"Rsync Linux"},sidebar:"vpsrootSidebar",previous:{title:"SSL-Zertifikat (Let's Encrypt)",permalink:"/guides/de/docs/vserver_linux_ssl"},next:{title:"Webserver installieren",permalink:"/guides/de/docs/vserver_linux_webserver"}},c={},d=[{value:"Rsync:",id:"rsync",level:2},{value:"Kopieren von Daten in ein anderes lokales Verzeichnis oder Laufwerk:",id:"kopieren-von-daten-in-ein-anderes-lokales-verzeichnis-oder-laufwerk",level:2},{value:"Schritt 1",id:"schritt-1",level:2},{value:"Schritt 3",id:"schritt-3",level:2},{value:"Schritt 5",id:"schritt-5",level:2}],m={toc:d},p="wrapper";function h(e){let{components:n,...r}=e;return(0,a.kt)(p,(0,t.Z)({},m,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"rsync"},"Rsync:"),(0,a.kt)("p",null,"Mit Hilfe von Rsync k\xf6nnen Backups angefertigt werden.\nSie k\xf6nnen auf dem lokalen System selber z.b in ein anderes Verzeichnis/Laufwerk kopiert werden oder auf ein Remote System. "),(0,a.kt)("h2",{id:"kopieren-von-daten-in-ein-anderes-lokales-verzeichnis-oder-laufwerk"},"Kopieren von Daten in ein anderes lokales Verzeichnis oder Laufwerk:"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"\u26a0\ufe0f Achtung: Der erste Durchgang kann je nach Datenmenge deutlich l\xe4nger dauern als weitere. Dies liegt daran das Rsync beim ersten mal alle Daten syncronsiert, ab dem zweiten Mal werden nur noch ver\xe4nderte Daten syncronsiert.\nEs wird also dann ein inkrementelles Backup erstellt. ")),(0,a.kt)("h2",{id:"schritt-1"},"Schritt 1"),(0,a.kt)("p",null,"Rsync kann mit folgendem Befehl installiert werden: "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"apt install rsync\n")),(0,a.kt)("p",null,"Nachdem es installiert wurde, kann es direkt genutzt werden. "),(0,a.kt)(i.Z,{mdxType:"Tabs"},(0,a.kt)(l.Z,{value:"T\xe4gliches Backup in ein lokales Verzeichnis/Laufwerk",label:"T\xe4gliches Backup in ein lokales Verzeichnis/Laufwerk",mdxType:"TabItem"},"## Schritt 2",(0,a.kt)("p",null,'In diesem Beispiel soll der Ordner "Client" unter /home in den Ordner "Backups" unter /home syncronsiert werden. '),(0,a.kt)("p",null,"Das kann mit folgendem Befehl gemacht werden: "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"rsync -arz /home/Client /home/Backup\n")),(0,a.kt)("p",null,"-a=Archivierung, die Attribute werden z.b \xfcbernommen"),(0,a.kt)("br",null),"-r=Rekursiv, Unterordner werden mit syncronisert",(0,a.kt)("br",null),"-z=Komprimierung, je nach Datenmengen/Datengr\xf6\xdfen wird komprimiert",(0,a.kt)("p",null,"Der Ordner wurde erfolgreicht syncronisiert "),(0,a.kt)("p",null,"Wenn jetzt eine Datei etc. im Client Ordner gel\xf6scht wird, so verbleibt sie weiterhin im Backup Ordner.\nDa die Date aber immer 1:1 syncron sein sollen, kann der rsync Befehl leicht abge\xe4ndert werden, diese \xc4nderung sorgt dann daf\xfcr das Daten etc. die im Client Ordner nicht mehr vorhanden sind auch im Backup Ordner entfernt werden. "),(0,a.kt)("p",null,"Der leicht ver\xe4nderte Befehl lautet: "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"rsync -arz --delete /home/Client /home/Backup\n")),(0,a.kt)("p",null,"-a=Archivierung, die Attribute werden z.b \xfcbernommen"),(0,a.kt)("br",null),"-r=Rekursiv, Unterordner werden mit syncronisert",(0,a.kt)("br",null),"-z=Komprimierung, je nach Datenmengen/Datengr\xf6\xdfen wird komprimiert",(0,a.kt)("br",null),"--delete= L\xf6scht Daten die in der Quelle nicht mehr vorhanden sind aber im Ziel noch bestehen",(0,a.kt)("h2",{id:"schritt-3"},"Schritt 3"),(0,a.kt)("p",null,"Damit der Befehl nicht immer manuell ausgef\xfchrt werden muss, kann dieser einfach in ein Cronjob gesetzt werden.\nEs soll z.b t\xe4glich um 3 Uhr Morgens ein Backup erstellt werden: "),(0,a.kt)("p",null,"Crontab -e \xf6ffnen: "),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/61839701/166191606-3a05da59-82f7-439f-8f44-b94c4ba9d153.png",alt:null})),(0,a.kt)("p",null,'Mit der Ziffer 1 kann "nano" als Editor genutzt werden.\nMit der Ziffer 2 kann "vim" als Editor genutzt werden. '),(0,a.kt)("p",null,"Nachem die Datei z.b mit Nano ge\xf6ffnet wurde, kann ein Crontab generiert und eingetragen werden.\nEin Crontab kann z.b mit diesem ",(0,a.kt)("a",{parentName:"p",href:"https://crontab-generator.org/"},"Generator")," erstellt werden. "),(0,a.kt)("p",null,"Der eingetragene Crontab sieht dann wie folgt aus: "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'0 3 * * * rsync --progress -arz --delete -e  "ssh -i /home/sshkey/keybackup" /home/Client/ root@123.123.123.123:/home/Backup/Home-Server1/ >/dev/null 2>&1\n')),(0,a.kt)("p",null,"Jeden Tag um 3 Uhr morgens wird der Befehl ausgef\xfchrt und es wird ein Backup erstellt. ")),(0,a.kt)(l.Z,{value:"T\xe4gliches Backup auf ein Remote System",label:"T\xe4gliches Backup auf ein Remote System",mdxType:"TabItem"},"## Schritt 4",(0,a.kt)("p",null,'In diesem Beispiel soll der Ordner "Client" unter /home in den Ordner "Backups" unter auf einem Remote System syncronsiert werden. Die Verbindung soll via SSH Key erfolgen, damit eine Sicherung ebenfalls automatisiert erfolgen kann.  '),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"\u26a0\ufe0f Wichtig: Auf dem Remote Server muss ebenfalls Rsync installiert sein. "),(0,a.kt)("pre",{parentName:"blockquote"},(0,a.kt)("code",{parentName:"pre"},"apt install rsync\n"))),(0,a.kt)("p",null,"Mit folgendem Befehl k\xf6nnen z.b die Daten gesichert werden auf den Remote Host (Eigene Anpassung notwendig): "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'rsync --progress -arz -e  "ssh -i /home/sshkey/keybackup" /home/Client/ root@123.123.123.123:/home/Backup/Home-Server1/\n')),(0,a.kt)("p",null,"-a=Archivierung, die Attribute werden z.b \xfcbernommen"),(0,a.kt)("br",null),"-r=Rekursiv, Unterordner werden mit syncronisert",(0,a.kt)("br",null),"-z=Komprimierung, je nach Datenmengen/Datengr\xf6\xdfen wird komprimiert",(0,a.kt)("br",null),'-e=Gibt denn SSH Port 22 an SSH Key angeben (Pfad)("ssh -i /home/sshkey/keybackup")= ssh -i /[Pfad zum Key] Zu sicherendes Verzeichnis angeben (/home/Client/)= /[Verzeichnis] RemoteHost(root@123.123.123.123:)= Login Name des Benutzers auf dem RemoteHost sowie Adresse angeben: name@IP/Domain Ziel Verzeichnis f\xfcr die Daten auf dem RemoteHost(:/home/Backup/Home-Server1/)= :/[Pfad-zum-Ziel-Verzeichnis]',(0,a.kt)("p",null,"Wenn jetzt eine Datei etc. im Client Ordner gel\xf6scht wird, so verbleibt sie weiterhin im Backup Ordner auf dem Remote Host.\nDa die Date aber immer 1:1 syncron sein sollen, kann der rsync Befehl leicht abge\xe4ndert werden, diese \xc4nderung sorgt dann daf\xfcr das Daten etc. die im Client Ordner nicht mehr vorhanden sind auch im Backup Ordner auf dem Remote Host entfernt werden. "),(0,a.kt)("p",null,"Der leicht ver\xe4nderte Befehl lautet: "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'rsync --progress -arz --delete -e  "ssh -i /home/sshkey/keybackup" /home/Client/ root@123.123.123.123:/home/Backup/Home-Server1/\n')),(0,a.kt)("p",null,"-a=Archivierung, die Attribute werden z.b \xfcbernommen"),(0,a.kt)("br",null),"-r=Rekursiv, Unterordner werden mit syncronisert",(0,a.kt)("br",null),"-z=Komprimierung, je nach Datenmengen/Datengr\xf6\xdfen wird komprimiert",(0,a.kt)("br",null),"--delete= L\xf6scht Daten die in der Quelle nicht mehr vorhanden sind aber im Ziel noch bestehen",(0,a.kt)("br",null),"-e=Gibt denn SSH Port 22 an",(0,a.kt)("br",null),'SSH Key angeben (Pfad)("ssh -i /home/sshkey/keybackup")= ssh -i /[Pfad zum Key]',(0,a.kt)("br",null),"Zu sicherendes Verzeichnis angeben (/home/Client/)= /[Verzeichnis]",(0,a.kt)("br",null),"RemoteHost(root@123.123.123.123:)= Login Name des Benutzers auf dem RemoteHost sowie Adresse angeben: name@IP/Domain",(0,a.kt)("br",null),"Ziel Verzeichnis f\xfcr die Daten auf dem RemoteHost(:/home/Backup/Home-Server1/)= :/[Pfad-zum-Ziel-Verzeichnis]",(0,a.kt)("h2",{id:"schritt-5"},"Schritt 5"),(0,a.kt)("p",null,"Damit der Befehl nicht immer manuell ausgef\xfchrt werden muss, kann dieser einfach in ein Cronjob gesetzt werden.\nEs soll z.b t\xe4glich um 3 Uhr Morgens ein Backup erstellt werden: "),(0,a.kt)("p",null,"Crontab -e \xf6ffnen: "),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/61839701/166191606-3a05da59-82f7-439f-8f44-b94c4ba9d153.png",alt:null})),(0,a.kt)("p",null,'Mit der Ziffer 1 kann "nano" als Editor genutzt werden.\nMit der Ziffer 2 kann "vim" als Editor genutzt werden. '),(0,a.kt)("p",null,"Nachem die Datei z.b mit Nano ge\xf6ffnet wurde, kann ein Crontab generiert und eingetragen werden.\nEin Crontab kann z.b mit diesem ",(0,a.kt)("a",{parentName:"p",href:"https://crontab-generator.org/"},"Generator")," erstellt werden. "),(0,a.kt)("p",null,"Der eingetragene Crontab sieht dann wie folgt aus: "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'0 3 * * * rsync --progress -arz --delete -e  "ssh -i /home/sshkey/keybackup" /home/Client/ root@123.123.123.123:/home/Backup/Home-Server1/ >/dev/null 2>&1\n')),(0,a.kt)("p",null,"Jeden Tag um 3 Uhr morgens wird der Befehl ausgef\xfchrt und es wird ein Backup erstellt. "))))}h.isMDXComponent=!0}}]);